version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: ai-intake-app
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-5}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-large}
      - DB_USE_POSTGRES=${DB_USE_POSTGRES:-false}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-ai_intake_db}
      - DB_USER=${DB_USER:-ai_intake_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - CSV_DATA_PATH=${CSV_DATA_PATH:-./data}
      - LOG_PATH=${LOG_PATH:-./logs}
      - SESSION_SECRET=${SESSION_SECRET}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
    networks:
      - ai-intake-network
    restart: unless-stopped
    command: npm run dev

  # PostgreSQL Database (Optional for MVP)
  postgres:
    image: postgres:15-alpine
    container_name: ai-intake-postgres
    environment:
      - POSTGRES_USER=${DB_USER:-ai_intake_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
      - POSTGRES_DB=${DB_NAME:-ai_intake_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai-intake-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-ai_intake_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ai-intake-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - ai-intake-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  ai-intake-network:
    driver: bridge